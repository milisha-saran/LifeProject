/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HabitsRouteImport } from './routes/habits'
import { Route as ChoresRouteImport } from './routes/chores'
import { Route as IndexRouteImport } from './routes/index'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HabitsRoute = HabitsRouteImport.update({
  id: '/habits',
  path: '/habits',
  getParentRoute: () => rootRouteImport,
} as any)
const ChoresRoute = ChoresRouteImport.update({
  id: '/chores',
  path: '/chores',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chores': typeof ChoresRoute
  '/habits': typeof HabitsRoute
  '/login': typeof LoginRoute
  '/projects': typeof ProjectsRoute
  '/register': typeof RegisterRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chores': typeof ChoresRoute
  '/habits': typeof HabitsRoute
  '/login': typeof LoginRoute
  '/projects': typeof ProjectsRoute
  '/register': typeof RegisterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chores': typeof ChoresRoute
  '/habits': typeof HabitsRoute
  '/login': typeof LoginRoute
  '/projects': typeof ProjectsRoute
  '/register': typeof RegisterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/chores' | '/habits' | '/login' | '/projects' | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/chores' | '/habits' | '/login' | '/projects' | '/register'
  id:
    | '__root__'
    | '/'
    | '/chores'
    | '/habits'
    | '/login'
    | '/projects'
    | '/register'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChoresRoute: typeof ChoresRoute
  HabitsRoute: typeof HabitsRoute
  LoginRoute: typeof LoginRoute
  ProjectsRoute: typeof ProjectsRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/habits': {
      id: '/habits'
      path: '/habits'
      fullPath: '/habits'
      preLoaderRoute: typeof HabitsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chores': {
      id: '/chores'
      path: '/chores'
      fullPath: '/chores'
      preLoaderRoute: typeof ChoresRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChoresRoute: ChoresRoute,
  HabitsRoute: HabitsRoute,
  LoginRoute: LoginRoute,
  ProjectsRoute: ProjectsRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
